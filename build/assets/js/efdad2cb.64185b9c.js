"use strict";(self.webpackChunkasync_wrapper_docs=self.webpackChunkasync_wrapper_docs||[]).push([[677],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(n),m=a,d=l["".concat(s,".").concat(m)]||l[m]||f[m]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5364:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Using with async function",c={unversionedId:"how-to-use/using-with-async-func",id:"how-to-use/using-with-async-func",title:"Using with async function",description:"Use with global configured object",source:"@site/docs/how-to-use/using-with-async-func.md",sourceDirName:"how-to-use",slug:"/how-to-use/using-with-async-func",permalink:"/async-wrapper/docs/how-to-use/using-with-async-func",draft:!1,editUrl:"https://github.com/MHassanTariq/async-wrapper-docs/tree/master/docs/how-to-use/using-with-async-func.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/async-wrapper/docs/how-to-use/setup"},next:{title:"Troubleshooting",permalink:"/async-wrapper/docs/troubleshooting"}},s={},p=[{value:"Creating an async function",id:"creating-an-async-function",level:2},{value:"Wrap with wrapper",id:"wrap-with-wrapper",level:2},{value:".execute",id:"execute",level:3}],u={toc:p},l="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-with-async-function"},"Using with async function"),(0,a.kt)("p",null,"Use with global configured object"),(0,a.kt)("p",null,"In the previous section, we have created a globally configured object. Now, we will use that configured object with our async function."),(0,a.kt)("h2",{id:"creating-an-async-function"},"Creating an async function"),(0,a.kt)("p",null,"Consider you have an async function that runs after 500 ms, takes in a param as number, and throws an error if that param is equal to 3. Otherwise, it follows the success case:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title='helper.js'",title:"'helper.js'"},'export async function asynFunc(param) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (param === 3) return rej("ERROR!!");\n      res(param);\n    }, 500);\n  });\n}\n')),(0,a.kt)("h2",{id:"wrap-with-wrapper"},"Wrap with wrapper"),(0,a.kt)("p",null,"Now, we will wrap the above ",(0,a.kt)("inlineCode",{parentName:"p"},"asyncFunction")," with our custom wrapper."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title='index.js'",title:"'index.js'"},'import { asyncWrapper } from "./config/wrappers";\nimport { asynFunc } from "./helper";\n\nasync function main() {\n  const result = await asyncWrapper.execute(asynFunc, 1);\n}\n\nmain();\n')),(0,a.kt)("h3",{id:"execute"},".execute"),(0,a.kt)("p",null,"The prototype for this function is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},".execute(func: (param: T) => Promise<void>, param: T)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"func")," is refered to as an async function that takes a single param. ",(0,a.kt)("inlineCode",{parentName:"p"},"param")," refers to the object with multiple key-value pairs as input to ",(0,a.kt)("inlineCode",{parentName:"p"},"func"),"."),(0,a.kt)("admonition",{title:"Single param",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"With the current provided support, an async function is required to take in a single param. That param can have multiple key-value pairs. e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUrl(domain, path)")," should be converted to ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUrl({domain, path})"))))}f.isMDXComponent=!0}}]);